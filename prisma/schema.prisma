// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

//id  String  @id @default(auto()) @map("_id") @db.ObjectId


model Example {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User{
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String    @unique
  business    Business  @relation(fields: [businessId], references: [id])
  businessId  String    
  auth        Account?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Account{
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @unique
  user        User      @relation(fields: [userId], references: [id])
  password    String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Business{
  id  String  @id         @default(auto()) @map("_id") @db.ObjectId
  name        String
  users       User[]
  categoryId  String?     @db.ObjectId
  category    Category?   @relation(fields: [categoryId], references: [id])
  products    Product[]    
  updatedAt   DateTime    @updatedAt
  createdAt   DateTime    @default(now())
}

model Category{
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String      @unique
  updatedAt   DateTime    @updatedAt
  createdAt   DateTime    @default(now())
  business    Business[]
}



model Product{
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  image       String?
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())
  businessId  String    @db.ObjectId
  business    Business  @relation(fields: [businessId], references: [id])
}




